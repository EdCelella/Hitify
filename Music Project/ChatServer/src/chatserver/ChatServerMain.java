/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chatserver;

import java.awt.Color;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import javax.swing.border.LineBorder;

/**
 *
 * @author edwardcelella
 */
public class ChatServerMain extends javax.swing.JFrame {
    
    // Sets colours to be used in design
    Color foreground = Color.decode("#FDFFFC");
    Color background = Color.decode("#2E2F2F");
    Color highlight = Color.decode("#5DFDCB");
    Color warning = Color.decode("#FF3366");
    
    int borderThickness = 4;
    
    /**
     * Creates new form ChatServerMain
     */
    public ChatServerMain() {
        
        initComponents();
        
        // Sets background
        getContentPane().setBackground(background);
        
        // Styles Scroll pane
        logScrollPane.getViewport().setBackground(background);
        logScrollPane.setForeground(foreground);
        logScrollPane.setBorder(null);
        logScrollPane.getVerticalScrollBar().setUI(new CustomScrollBarUI());
        
        // Styles buttons
        cmdClear.setContentAreaFilled(false);
        cmdClear.setBackground(background);
        cmdClear.setBorder(new LineBorder(foreground, borderThickness));
	cmdClear.setForeground(foreground);
        
        cmdClose.setContentAreaFilled(false);
        cmdClose.setBackground(background);
        cmdClose.setBorder(new LineBorder(foreground, borderThickness));
	cmdClose.setForeground(foreground);
        
        // Styles text area
        logTextArea.setBackground(background);
        logTextArea.setForeground(foreground);
        logTextArea.setBorder(new LineBorder(foreground, borderThickness));
        
        // Runs thread which runs server backend code
        Thread th = new Thread(new Runnable()
        {
            public void run(){
                runChatServer();
            }
        });
        
        th.start();
        
    }
    
    public void runChatServer(){
        // Server run code
        try{
            // Sets a port number for the server socket
            ServerSocket server = new ServerSocket(9091);
            while(true){
                
                // Scrolls to bottom of scroll pane
                logScrollPane.getVerticalScrollBar().setValue(logScrollPane.getVerticalScrollBar().getMaximum());
                
                logTextArea.setText(logTextArea.getText() + "Waiting for client connection... \n");
                
                // Creats socket to listen for requests
                Socket client = server.accept();
                logTextArea.setText(logTextArea.getText() + "Connected to: " + client.getInetAddress() + "\n");
                
                // Creates and runs new thread
                Thread th = new Thread(new ServerSendHandler(client, logTextArea, logScrollPane));
                th.start();
            }	
        }
        catch(IOException e){
            // Prints error message
            System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logScrollPane = new javax.swing.JScrollPane();
        logTextArea = new javax.swing.JTextArea();
        title = new javax.swing.JLabel();
        cmdClear = new javax.swing.JButton();
        cmdClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        logScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        logTextArea.setEditable(false);
        logTextArea.setColumns(20);
        logTextArea.setLineWrap(true);
        logTextArea.setRows(5);
        logScrollPane.setViewportView(logTextArea);

        title.setFont(new java.awt.Font("Futura", 1, 48)); // NOI18N
        title.setForeground(new java.awt.Color(93, 253, 203));
        title.setText("CHAT SERVER");

        cmdClear.setFont(new java.awt.Font("Futura", 1, 24)); // NOI18N
        cmdClear.setText("CLEAR LOG");
        cmdClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmdClearMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmdClearMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmdClearMouseEntered(evt);
            }
        });

        cmdClose.setFont(new java.awt.Font("Futura", 1, 24)); // NOI18N
        cmdClose.setText("CLOSE SERVER");
        cmdClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmdCloseMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmdCloseMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmdCloseMouseEntered(evt);
            }
        });
        cmdClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logScrollPane)
                    .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmdClear, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmdClose, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(logScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmdClose, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                    .addComponent(cmdClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCloseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdCloseActionPerformed

    private void cmdClearMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdClearMouseEntered
        // Changes colour of button when hovered over
        cmdClear.setContentAreaFilled(true);
        cmdClear.setBackground(foreground);
        cmdClear.setForeground(warning);
    }//GEN-LAST:event_cmdClearMouseEntered

    private void cmdClearMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdClearMouseExited
        // Changes colour of button when mouse isn't hovering
        cmdClear.setContentAreaFilled(false);
        cmdClear.setForeground(foreground);
    }//GEN-LAST:event_cmdClearMouseExited

    private void cmdCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdCloseMouseEntered
        // Changes colour of button when hovered over
        cmdClose.setContentAreaFilled(true);
        cmdClose.setBackground(foreground);
        cmdClose.setForeground(warning);
    }//GEN-LAST:event_cmdCloseMouseEntered

    private void cmdCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdCloseMouseExited
        // Changes colour of button when mouse isn't hovering
        cmdClose.setContentAreaFilled(false);
        cmdClose.setForeground(foreground);
    }//GEN-LAST:event_cmdCloseMouseExited

    private void cmdClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdClearMouseClicked
        // Clears text area
        logTextArea.setText("");
    }//GEN-LAST:event_cmdClearMouseClicked

    private void cmdCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdCloseMouseClicked
        // Closes project
        System.exit(0);
    }//GEN-LAST:event_cmdCloseMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatServerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatServerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatServerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatServerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChatServerMain().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdClear;
    private javax.swing.JButton cmdClose;
    private javax.swing.JScrollPane logScrollPane;
    private javax.swing.JTextArea logTextArea;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
