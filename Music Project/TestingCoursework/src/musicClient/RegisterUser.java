/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package musicClient;

import java.awt.Color;
import javax.swing.ImageIcon;
import infopacket.InfoPacket;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;

/**
 *
 * @author samal
 */
public class RegisterUser extends javax.swing.JFrame {

    private String Filepath = "";
    
    // Sets colours to be used in design
    Color foreground = Color.decode("#FDFFFC");
    Color background = Color.decode("#2E2F2F");
    Color highlight = Color.decode("#5DFDCB");
    Color warning = Color.decode("#FF3366");
    
    static void SetPhoto(ImageIcon ResizeImage) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * Creates new form RegisterUser
     */
    public RegisterUser() {
        initComponents();
        
        int buttonBorder = 4;
        
        this.getContentPane().setBackground(background);
        
        //Sets background, text and border colours for buttons
        cmdPhoto.setContentAreaFilled(false);
        cmdPhoto.setBackground(background);
        cmdPhoto.setBorder(new LineBorder(foreground, buttonBorder));
	cmdPhoto.setForeground(foreground);
        
        cmdLogIn.setContentAreaFilled(false);
        cmdLogIn.setBackground(background);
        cmdLogIn.setBorder(new LineBorder(foreground, buttonBorder));
	cmdLogIn.setForeground(foreground);
        
        cmdClear.setContentAreaFilled(false);
        cmdClear.setBackground(background);
        cmdClear.setBorder(new LineBorder(foreground, buttonBorder));
	cmdClear.setForeground(foreground);
        
        cmdCreate.setContentAreaFilled(false);
        cmdCreate.setBackground(background);
        cmdCreate.setBorder(new LineBorder(foreground, buttonBorder));
	cmdCreate.setForeground(foreground);
        
        lblPhoto.setBorder(new LineBorder(foreground, 2));
        
        txtFirstName.setBorder(new LineBorder(foreground, 4));
        txtSecondName.setBorder(new LineBorder(foreground, 4));
        txtEmail.setBorder(new LineBorder(foreground, 4));
        txtUserName.setBorder(new LineBorder(foreground, 4));
        PFPassword.setBorder(new LineBorder(foreground, 4));
        PFPassword2.setBorder(new LineBorder(foreground, 4));
        
        ImageIcon RadioOff = new ImageIcon("./res/Photos/SystemPics/RadioBtnOff.png");
        ImageIcon RadioOn = new ImageIcon("./res/Photos/SystemPics/RadioBtnOn.png");
        
        rbFolk.setIcon(RadioOff);
        rbFolk.setSelectedIcon(RadioOn);
        rbPop.setIcon(RadioOff);
        rbPop.setSelectedIcon(RadioOn);
        rbRock.setIcon(RadioOff);
        rbRock.setSelectedIcon(RadioOn);
        rbBlues.setIcon(RadioOff);
        rbBlues.setSelectedIcon(RadioOn);
        rbTechno.setIcon(RadioOff);
        rbTechno.setSelectedIcon(RadioOn);
        rbJazz.setIcon(RadioOff);
        rbJazz.setSelectedIcon(RadioOn);
        rbEDM.setIcon(RadioOff);
        rbEDM.setSelectedIcon(RadioOn);
        rbSoul.setIcon(RadioOff);
        rbSoul.setSelectedIcon(RadioOn);
        rbRapping.setIcon(RadioOff);
        rbRapping.setSelectedIcon(RadioOn);
        rbReggae.setIcon(RadioOff);
        rbReggae.setSelectedIcon(RadioOn);
        rbIndie.setIcon(RadioOff);
        rbIndie.setSelectedIcon(RadioOn);
        rbClassical.setIcon(RadioOff);
        rbClassical.setSelectedIcon(RadioOn);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        lblMusicChoice1 = new javax.swing.JLabel();
        lblRegisterNewUser = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        lblSecondName = new javax.swing.JLabel();
        txtSecondName = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblUserName = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        lblPassword2 = new javax.swing.JLabel();
        lblMusicChoice = new javax.swing.JLabel();
        rbFolk = new javax.swing.JRadioButton();
        rbRock = new javax.swing.JRadioButton();
        rbTechno = new javax.swing.JRadioButton();
        rbSoul = new javax.swing.JRadioButton();
        rbPop = new javax.swing.JRadioButton();
        rbBlues = new javax.swing.JRadioButton();
        rbJazz = new javax.swing.JRadioButton();
        rbReggae = new javax.swing.JRadioButton();
        rbEDM = new javax.swing.JRadioButton();
        rbRapping = new javax.swing.JRadioButton();
        rbIndie = new javax.swing.JRadioButton();
        rbClassical = new javax.swing.JRadioButton();
        lblUploadPicture = new javax.swing.JLabel();
        cmdPhoto = new javax.swing.JButton();
        cmdCreate = new javax.swing.JButton();
        cmdLogIn = new javax.swing.JButton();
        lblPhoto = new javax.swing.JLabel();
        cmdClear = new javax.swing.JButton();
        PFPassword = new javax.swing.JPasswordField();
        PFPassword2 = new javax.swing.JPasswordField();

        lblMusicChoice1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblMusicChoice1.setText("Select Music Interests:");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(43, 45, 66));

        lblRegisterNewUser.setFont(new java.awt.Font("Futura", 1, 48)); // NOI18N
        lblRegisterNewUser.setForeground(new java.awt.Color(93, 253, 203));
        lblRegisterNewUser.setText("REGISTER");

        lblFirstName.setFont(new java.awt.Font("Futura", 0, 18)); // NOI18N
        lblFirstName.setForeground(new java.awt.Color(253, 255, 252));
        lblFirstName.setText("First Name:");

        txtFirstName.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N

        lblSecondName.setFont(new java.awt.Font("Futura", 0, 18)); // NOI18N
        lblSecondName.setForeground(new java.awt.Color(253, 255, 252));
        lblSecondName.setText("Second Name:");

        txtSecondName.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N

        lblEmail.setFont(new java.awt.Font("Futura", 0, 18)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(253, 255, 252));
        lblEmail.setText("Email Address:");

        txtEmail.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N

        lblUserName.setFont(new java.awt.Font("Futura", 0, 18)); // NOI18N
        lblUserName.setForeground(new java.awt.Color(253, 255, 252));
        lblUserName.setText("Username:");

        txtUserName.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N

        lblPassword.setFont(new java.awt.Font("Futura", 0, 18)); // NOI18N
        lblPassword.setForeground(new java.awt.Color(253, 255, 252));
        lblPassword.setText("Password:");

        lblPassword2.setFont(new java.awt.Font("Futura", 0, 18)); // NOI18N
        lblPassword2.setForeground(new java.awt.Color(253, 255, 252));
        lblPassword2.setText("Confirm Password:");

        lblMusicChoice.setFont(new java.awt.Font("Futura", 0, 18)); // NOI18N
        lblMusicChoice.setForeground(new java.awt.Color(253, 255, 252));
        lblMusicChoice.setText("Select Music Interests:");

        rbFolk.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        rbFolk.setForeground(new java.awt.Color(253, 255, 252));
        rbFolk.setText("Folk");

        rbRock.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        rbRock.setForeground(new java.awt.Color(253, 255, 252));
        rbRock.setText("Rock");
        rbRock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbRockActionPerformed(evt);
            }
        });

        rbTechno.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        rbTechno.setForeground(new java.awt.Color(253, 255, 252));
        rbTechno.setText("Techno");

        rbSoul.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        rbSoul.setForeground(new java.awt.Color(253, 255, 252));
        rbSoul.setText("Soul");

        rbPop.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        rbPop.setForeground(new java.awt.Color(253, 255, 252));
        rbPop.setText("Pop");

        rbBlues.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        rbBlues.setForeground(new java.awt.Color(253, 255, 252));
        rbBlues.setText("Blues");
        rbBlues.setToolTipText("");

        rbJazz.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        rbJazz.setForeground(new java.awt.Color(253, 255, 252));
        rbJazz.setText("Jazz  ");
        rbJazz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbJazzActionPerformed(evt);
            }
        });

        rbReggae.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        rbReggae.setForeground(new java.awt.Color(253, 255, 252));
        rbReggae.setText("Reggae");

        rbEDM.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        rbEDM.setForeground(new java.awt.Color(253, 255, 252));
        rbEDM.setText("EDM");

        rbRapping.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        rbRapping.setForeground(new java.awt.Color(253, 255, 252));
        rbRapping.setText("Rapping");

        rbIndie.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        rbIndie.setForeground(new java.awt.Color(253, 255, 252));
        rbIndie.setText("Indie");

        rbClassical.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N
        rbClassical.setForeground(new java.awt.Color(253, 255, 252));
        rbClassical.setText("Classical");

        lblUploadPicture.setFont(new java.awt.Font("Futura", 0, 18)); // NOI18N
        lblUploadPicture.setForeground(new java.awt.Color(253, 255, 252));
        lblUploadPicture.setText("Upload Profile Picture");

        cmdPhoto.setFont(new java.awt.Font("Futura", 1, 18)); // NOI18N
        cmdPhoto.setText("UPLOAD PHOTO");
        cmdPhoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmdPhotoMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmdPhotoMouseEntered(evt);
            }
        });
        cmdPhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPhotoActionPerformed(evt);
            }
        });

        cmdCreate.setFont(new java.awt.Font("Futura", 1, 18)); // NOI18N
        cmdCreate.setText("SIGN UP");
        cmdCreate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmdCreateMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmdCreateMouseEntered(evt);
            }
        });
        cmdCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCreateActionPerformed(evt);
            }
        });

        cmdLogIn.setFont(new java.awt.Font("Futura", 1, 18)); // NOI18N
        cmdLogIn.setText("LOG IN");
        cmdLogIn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmdLogInMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmdLogInMouseEntered(evt);
            }
        });
        cmdLogIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLogInActionPerformed(evt);
            }
        });

        lblPhoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cmdClear.setFont(new java.awt.Font("Futura", 1, 18)); // NOI18N
        cmdClear.setText("CLEAR");
        cmdClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmdClearMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmdClearMouseEntered(evt);
            }
        });
        cmdClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdClearActionPerformed(evt);
            }
        });

        PFPassword.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N

        PFPassword2.setFont(new java.awt.Font("Futura", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMusicChoice)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbFolk)
                            .addComponent(rbPop))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbBlues)
                            .addComponent(rbRock, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbTechno)
                            .addComponent(rbJazz))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(rbEDM)
                                .addGap(40, 40, 40))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rbSoul)
                                .addGap(44, 44, 44)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(rbReggae, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rbRapping, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbIndie)
                            .addComponent(rbClassical)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(cmdLogIn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cmdClear, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmdCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblPassword2)
                                        .addComponent(lblPassword))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(PFPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(PFPassword2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(2, 2, 2)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lblUserName)
                                                .addComponent(lblEmail)
                                                .addComponent(lblSecondName)
                                                .addComponent(lblFirstName))
                                            .addGap(41, 41, 41)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtSecondName, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(lblRegisterNewUser))))
                            .addGap(74, 74, 74)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmdPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblUploadPicture, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblRegisterNewUser)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblFirstName)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblUploadPicture)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSecondName)
                            .addComponent(txtSecondName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmail)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUserName)
                            .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPassword)
                            .addComponent(PFPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PFPassword2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPassword2))
                        .addGap(35, 35, 35)
                        .addComponent(lblMusicChoice)
                        .addGap(14, 14, 14))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmdPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(70, 70, 70)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbFolk)
                    .addComponent(rbRock)
                    .addComponent(rbTechno)
                    .addComponent(rbEDM)
                    .addComponent(rbRapping)
                    .addComponent(rbIndie))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbPop)
                    .addComponent(rbBlues)
                    .addComponent(rbJazz)
                    .addComponent(rbSoul)
                    .addComponent(rbReggae)
                    .addComponent(rbClassical))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmdClear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                    .addComponent(cmdLogIn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmdCreate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        lblMusicChoice.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdLogInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLogInActionPerformed
        new LogInScreen().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_cmdLogInActionPerformed

    private void cmdPhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPhotoActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        Filepath = f.getAbsolutePath();
        lblPhoto.setIcon(ResizeImage(Filepath));
        
    }//GEN-LAST:event_cmdPhotoActionPerformed

    private void cmdCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCreateActionPerformed
        Boolean isValid;
        isValid = ValidChecks();
        
        if (isValid == true)
        {
            String Password = new String (PFPassword.getPassword());
            String PasswordConfirm = new String (PFPassword2.getPassword());
            //If password is entered correctly twice
            if (Password.equals(PasswordConfirm))
            {
                ArrayList UserRegister = new ArrayList();
                
                UserRegister.add(txtUserName.getText());
                UserRegister.add(Password);
                UserRegister.add(txtFirstName.getText());
                UserRegister.add(txtSecondName.getText());
                UserRegister.add(txtEmail.getText());
                
                
                if (rbFolk.isSelected()) UserRegister.add("Folk");
                if (rbRock.isSelected()) UserRegister.add("Rock");
                if (rbTechno.isSelected()) UserRegister.add("Techno");
                if (rbPop.isSelected()) UserRegister.add("Pop");
                if (rbBlues.isSelected()) UserRegister.add("Blues");
                if (rbJazz.isSelected()) UserRegister.add("Jazz");
                if (rbEDM.isSelected()) UserRegister.add("EDM");
                if (rbRapping.isSelected()) UserRegister.add("Rapping");
                if (rbIndie.isSelected()) UserRegister.add("Indie");
                if (rbSoul.isSelected()) UserRegister.add("Soul");
                if (rbReggae.isSelected()) UserRegister.add("Reggae");
                if (rbClassical.isSelected()) UserRegister.add("Classical");
                
                //Get file path from file chooser               
                
                try {
                    FileInputStream UserPicture = new FileInputStream(Filepath);
                    byte [] buffer = new byte[UserPicture.available()];
                    UserPicture.read(buffer);
                    
                    Socket MainServer = new Socket("localhost", 9090);
                    
                    ObjectOutputStream OutToServer = new ObjectOutputStream(MainServer.getOutputStream());
                    ObjectInputStream InFromServer = new ObjectInputStream(MainServer.getInputStream());
                    InfoPacket UserDetails = new InfoPacket();
                    
                    UserDetails.SetService("CNU");
                    UserDetails.SetArray(UserRegister);
                    UserDetails.SetFirstByte(buffer);
                    
                    OutToServer.writeObject(UserDetails);
                    
                    InfoPacket Reply = (InfoPacket) InFromServer.readObject();
                    OutToServer.close();
                    InFromServer.close();

                    MainServer.close();
                    
                    if ("Registered".equals(Reply.GetData()))
                    {
                        ClearForm();
                    
                        JOptionPane.showMessageDialog(this,
                        "Your new account has been created, log in to use Shitify",
                        "Registering",
                        JOptionPane.PLAIN_MESSAGE);

                        new LogInScreen().setVisible(true);
                        this.dispose();
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(this,
                        "This username belongs to another profile. Please choose another username.",
                        "Registering",
                        JOptionPane.PLAIN_MESSAGE);
                    }
                    

                    
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(RegisterUser.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(RegisterUser.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(RegisterUser.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            else
            {
                JOptionPane.showMessageDialog(this,
                "Your passwords do not match.",
                "Error",
            JOptionPane.PLAIN_MESSAGE);
            }
        }
        
        
        
    }//GEN-LAST:event_cmdCreateActionPerformed

    private void cmdClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdClearActionPerformed
        ClearForm();
    }//GEN-LAST:event_cmdClearActionPerformed

    private void rbJazzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbJazzActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbJazzActionPerformed

    private void rbRockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbRockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbRockActionPerformed

    private void cmdPhotoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdPhotoMouseEntered
        // Changes colour of button when hovered over
        cmdPhoto.setContentAreaFilled(true);
        cmdPhoto.setBackground(foreground);
        cmdPhoto.setForeground(highlight);
    }//GEN-LAST:event_cmdPhotoMouseEntered

    private void cmdPhotoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdPhotoMouseExited
        // Changes colour of button when mouse isn't hovering
        cmdPhoto.setContentAreaFilled(false);
        cmdPhoto.setForeground(foreground);
    }//GEN-LAST:event_cmdPhotoMouseExited

    private void cmdLogInMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdLogInMouseEntered
        // Changes colour of button when hovered over
        cmdLogIn.setContentAreaFilled(true);
        cmdLogIn.setBackground(foreground);
        cmdLogIn.setForeground(highlight);
    }//GEN-LAST:event_cmdLogInMouseEntered

    private void cmdLogInMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdLogInMouseExited
        // Changes colour of button when mouse isn't hovering
        cmdLogIn.setContentAreaFilled(false);
        cmdLogIn.setForeground(foreground);
    }//GEN-LAST:event_cmdLogInMouseExited

    private void cmdClearMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdClearMouseEntered
        // Changes colour of button when hovered over
        cmdClear.setContentAreaFilled(true);
        cmdClear.setBackground(foreground);
        cmdClear.setForeground(warning);
    }//GEN-LAST:event_cmdClearMouseEntered

    private void cmdClearMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdClearMouseExited
        // Changes colour of button when mouse isn't hovering
        cmdClear.setContentAreaFilled(false);
        cmdClear.setForeground(foreground);
    }//GEN-LAST:event_cmdClearMouseExited

    private void cmdCreateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdCreateMouseEntered
        // Changes colour of button when hovered over
        cmdCreate.setContentAreaFilled(true);
        cmdCreate.setBackground(foreground);
        cmdCreate.setForeground(highlight);
    }//GEN-LAST:event_cmdCreateMouseEntered

    private void cmdCreateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdCreateMouseExited
        // Changes colour of button when mouse isn't hovering
        cmdCreate.setContentAreaFilled(false);
        cmdCreate.setForeground(foreground);
    }//GEN-LAST:event_cmdCreateMouseExited

    private Boolean ValidChecks() {
        
        if (txtFirstName.getText().length() < 2 || txtSecondName.getText().length() < 2)
        {
            JOptionPane.showMessageDialog(this,
            "Names need to be at least two characters in length.",
            "Error",
            JOptionPane.PLAIN_MESSAGE);
            
            return false;
        }
        else if(txtEmail.getText().length() < 5 || txtUserName.getText().length() < 5)
        {
            JOptionPane.showMessageDialog(this,
            "Email and Usernames need to be a minimum of five characters long.",
            "Error",
            JOptionPane.PLAIN_MESSAGE);
            return false;
        }
        else if (PFPassword.getPassword().toString().length() < 6)
        {
            JOptionPane.showMessageDialog(this,
            "Passwords should be a minimum of six characters in length.",
            "Error",
            JOptionPane.PLAIN_MESSAGE);
            return false;
        }
        //if email does not contain a "@" or "."
        else if (txtEmail.getText().contains("@") == false || txtEmail.getText().contains(".") == false)
        {
            JOptionPane.showMessageDialog(this,
            "Invalid email format.",
            "Error",
            JOptionPane.PLAIN_MESSAGE);
            return false;
        }
        
        
        int PrefCounter = 0;
        
        if (rbFolk.isSelected()) PrefCounter++;
        if (rbRock.isSelected()) PrefCounter++;
        if (rbTechno.isSelected()) PrefCounter++;
        if (rbPop.isSelected()) PrefCounter++;
        if (rbBlues.isSelected()) PrefCounter++;
        if (rbJazz.isSelected()) PrefCounter++;
        if (rbEDM.isSelected()) PrefCounter++;
        if (rbRapping.isSelected()) PrefCounter++;
        if (rbIndie.isSelected()) PrefCounter++;
        if (rbSoul.isSelected()) PrefCounter++;
        if (rbReggae.isSelected()) PrefCounter++;
        if (rbClassical.isSelected()) PrefCounter++;
        
        if (PrefCounter < 1)
        {
            JOptionPane.showMessageDialog(this,
            "You need to select at least one Genre.",
            "Error",
            JOptionPane.PLAIN_MESSAGE);
            
            return false;
        }
        
        if ("".equals(Filepath))
        {
            JOptionPane.showMessageDialog(this,
            "You need to select a photo.",
            "Error",
            JOptionPane.PLAIN_MESSAGE);
            return false;
        }
        
        return true;
    }
    
    public ImageIcon ResizeImage(String ImagePath)
    {
        ImageIcon MyImage = new ImageIcon(ImagePath);
        Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(lblPhoto.getWidth(), lblPhoto.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }
    
    public void ClearForm()
    {
        txtFirstName.setText("");
        txtSecondName.setText("");
        txtUserName.setText("");
        txtEmail.setText("");
        PFPassword.setText("");
        PFPassword2.setText("");
        
        rbFolk.setSelected(false);
        rbRock.setSelected(false);
        rbTechno.setSelected(false);
        rbPop.setSelected(false);
        rbBlues.setSelected(false);
        rbJazz.setSelected(false);
        rbEDM.setSelected(false);
        rbRapping.setSelected(false);
        rbIndie.setSelected(false);
        rbSoul.setSelected(false);
        rbReggae.setSelected(false);
        rbClassical.setSelected(false);
        
        lblPhoto.setIcon(ResizeImage(""));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField PFPassword;
    private javax.swing.JPasswordField PFPassword2;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JButton cmdClear;
    private javax.swing.JButton cmdCreate;
    private javax.swing.JButton cmdLogIn;
    private javax.swing.JButton cmdPhoto;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblMusicChoice;
    private javax.swing.JLabel lblMusicChoice1;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPassword2;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JLabel lblRegisterNewUser;
    private javax.swing.JLabel lblSecondName;
    private javax.swing.JLabel lblUploadPicture;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JRadioButton rbBlues;
    private javax.swing.JRadioButton rbClassical;
    private javax.swing.JRadioButton rbEDM;
    private javax.swing.JRadioButton rbFolk;
    private javax.swing.JRadioButton rbIndie;
    private javax.swing.JRadioButton rbJazz;
    private javax.swing.JRadioButton rbPop;
    private javax.swing.JRadioButton rbRapping;
    private javax.swing.JRadioButton rbReggae;
    private javax.swing.JRadioButton rbRock;
    private javax.swing.JRadioButton rbSoul;
    private javax.swing.JRadioButton rbTechno;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtSecondName;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
